buildscript {
    ext {
        springBootVersion = '2.4.4'
    }
}


plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
//    id "com.arenagod.gradle.MybatisGenerator" version "1.4"
}

group = 'com.blt'
version = '1.0'


subprojects {
    apply plugin: 'java'
    sourceCompatibility = '11'

    repositories {
//        maven {
//            url 'https://repo.spring.io/libs-milestone'
//        }
//        maven {
//            url 'https://repo.spring.io/milestone'
//        }
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-quartz', version:"${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-quartz:${springBootVersion}"
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
        implementation 'org.springframework.boot:spring-boot-starter-web:2.4.4'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: "${springBootVersion}"
        compileOnly 'org.projectlombok:lombok:1.18.20'
        implementation group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.2.5'
        implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
        implementation 'mysql:mysql-connector-java:8.0.23'
        annotationProcessor 'org.projectlombok:lombok:1.18.20'
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}"
        implementation group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '1.3.0'


        configurations {
            all*.exclude group : 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        }
    }

    task 'create-dirs' {
        doLast {
            sourceSets*.java.srcDirs*.each {
                it.mkdirs()
            }
            sourceSets*.resources.srcDirs*.each {
                it.mkdirs()
            }
        }
    }

    test {
        useJUnitPlatform()
    }

    tasks.withType(JavaCompile) {
        options.encoding("UTF-8")
    }

    [compileJava, javadoc, compileTestJava]*.options*.encoding = "UTF-8"
}

